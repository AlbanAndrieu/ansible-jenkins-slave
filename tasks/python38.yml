---

- name: python3 | Install python (RedHat and CentOS based)
  yum:
    name: "{{ item }}"
    state: "{{ util_pkg_state | default('present') }}"
  when: ((ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat') and ansible_distribution_major_version == '6')
  with_items:
    - "https://centos6.iuscommunity.org/ius-release.rpm"
    - python38u
    - python38u-devel
    - python38u-pip
  become: true

- name: python3 | Install python (RedHat and CentOS based)
  yum:
    name: "{{ item }}"
    state: "{{ util_pkg_state | default('present') }}"
  when: ((ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat') and ansible_distribution_major_version == '7')
  with_items:
    - "https://centos7.iuscommunity.org/ius-release.rpm"
    - python38u
    - python38u-devel
    - python38u-pip
  become: true

- name: python3 | Set python link to python version
  set_fact: python3_version=

- name: python3 | Install python 3 requirement
  action: "{{ ansible_pkg_mgr }} name={{ item }} update_cache=yes state={{ util_pkg_state | default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['12.04', '14.04'])
  with_items:
    - python
    - python-dev
    - python-dbg
    - python-gdbm

#- name: python3 | Install missing pip{{ python3_version }} (1)
#  get_url:
#    url: https://bootstrap.pypa.io/get-pip.py
#    dest: /tmp/get-pip.py
#  register: curl_result
#  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version is version_compare(16.04, '>='))
#  become: true
#
#- name: python3 | Install missing pip{{ python3_version }} (2)   # noqa 503
#  command: "python{{ python3_version }} /tmp/get-pip.py"
#  when: curl_result.changed and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version is version_compare(16.04, '>='))
#  changed_when: false
#  become: true
#
#- debug: msg="curl_result - {{ curl_result.rc }} - {{ curl_result.stdout }}"
#  when: curl_result.changed and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version is version_compare(16.04, '>=')) and not ansible_check_mode
#  ignore_errors: true

# - debug: msg="{{ curl_result.stdout }}"

- name: python3 | Run pip check   # noqa 503
  shell: (pip -V && pip -V) | uniq
  when: curl_result.changed
  become: true
#  ignore_errors: true

- name: python3 | Upgrade setuptools
  #command: "pip{{ python3_version }} install --upgrade setuptools"
  command: "pip{{ python3_version }}  uninstall setuptools{{ python3_version }}
  changed_when: false
  become: true
  ignore_errors: true

# python3 -m pip install --upgrade pip==20.0.2
# deactivate
# sudo pip3 install --upgrade pip

#- name: python3 | Upgrade pip3
#  command: "pip3 install --upgrade pip==20.1.1"
#  changed_when: false
#  become: true
#  ignore_errors: true
#
#- name: python3 | Upgrade pip
#  command: "pip{{ python3_version }} install --upgrade pip==20.1.1"
#  changed_when: false
#  become: true
#  ignore_errors: true

#- name: python | Check if /usr/bin/pip3 is present
#  stat:
#    path: /usr/bin/pip3
#  register: pip3

#- name: python | Create link to pip3
#  file: path=/usr/local/bin/pip3.8 src=/usr/bin/pip3 state=link # force=yes
#  when: pip3.stat.islnk is not defined not pip3.stat.islnk
#  become: true
#  ignore_errors: true  # Ignore failure on Travis
#  tags:
#    - pip3
#    - vm
