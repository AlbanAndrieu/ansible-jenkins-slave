
- name: jenkins-slave | Install debug tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
#  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  with_items:
    - xclock
    - xauth
  become: yes
  ignore_errors: true     
  changed_when: false

- name: jenkins-slave | Coredump handling
  pam_limits: domain={{ item }} limit_type=soft limit_item=core value=unlimited backup=yes
  with_items:
    - test
    - postgres
#  become_method: su
  become: true
  when: ansible_os_family != "Windows"

- name: jenkins-slave |  Make a directory for coredumps
  file: path="/home/{{ jenkins_user }}/coredumps" state=directory
  when: ansible_os_family != "Windows"

- name: jenkins-slave | Remove unknown keys from sysctl.conf
  sysctl: name={{ item }} state=absent reload=no
  with_items:
      - net.bridge.bridge-nf-call-arptables
      - net.bridge.bridge-nf-call-iptables
      - net.bridge.bridge-nf-call-ip6tables
#  become_method: su
  become: true
  when: ansible_os_family == "GosLinux" or ansible_os_family == "ROSA"

#Check with
#sysctl -p /etc/sysctl.conf

#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
#net.ipv6.conf.lo.disable_ipv6 = 1

- name: jenkins-slave | Change coredump filename pattern
  sysctl: name="kernel.core_pattern" value="/home/{{ jenkins_user }}/coredumps/core-%e-%p-%t" sysctl_set=yes state=present
#  become_method: su
  become: true
  when:
    - ansible_os_family != "Windows"

- name: jenkins-slave | Install CPP gdb tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat' or ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - gdb
  become: yes
  ignore_errors: true
  changed_when: false

- name: jenkins-slave | Install CPP debug tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - pstack
  become: yes
  ignore_errors: true
  changed_when: false

#TODO
#sudo yum groupinstall 'Development Tools'

#TODO homebrew
#sudo apt-get install build-essential curl file git python-setuptools ruby
#sudo yum install curl file git irb python-setuptools ruby
#ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
