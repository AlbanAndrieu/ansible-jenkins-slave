#ansible-playbook jenkins.yml --extra-vars "host=myhost user=myuser" -i hosts --ask-sudo-pass

- name: Include OS-specific variables.
  #include_vars: "{{ ansible_os_family }}.yml"
  include_vars: "{{ ansible_distribution }}-{{ ansible_architecture }}.yml"
  #include_vars: "{{ ansible_distribution }}.yml"

- name: jenkins-slave | Install wget package
  action: apt pkg='wget' state={{ jenkins_pkg_state }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: jenkins-slave | Install wget package
  action: yum name='wget' state={{ jenkins_pkg_state }}
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

######
# JAVA
#

#- name: jenkins-slave | Install JDK
#  apt: pkg={{ item }} state={{ jenkins_pkg_state }} update_cache=yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  tags: package
#  with_items:
#   - openjdk-6-jdk
#   - openjdk-7-jdk

#sudo add-apt-repository ppa:webupd8team/java
#sudo apt-get update
#sudo apt-get install oracle-java7-installer
#sudo apt-get install oracle-java8-installer

- name: jenkins-slave | Create temporary directory
  shell: mktemp -d
  register: tempdir
  sudo: true
  tags:
    - jenkins-slave

- name: jdk7 | Create {{ jvm_folder }} directory
  file: path={{ jvm_folder }} state=directory
  tags: jdk_setup

- name: jdk7 | Copy download JDK7 script
  copy: src=download-jdk7.sh dest={{ jdk_dir_tmp }} mode=0555
  when: jenkins_jdk7_enable
  tags: jdk_setup

- name: jdk7 | Download JDK7 (Ubuntu)
  action: command creates={{ jvm_folder }}/{{ jdk7_archive_extracted }} chdir={{ jvm_folder }} {{ jdk_dir_tmp }}/download-jdk7.sh {{ jdk7_url }} {{ jdk7_archive }}
  sudo: yes
  register: jdk7_download
  when: jenkins_jdk7_enable
  tags: jdk_setup

- name: jdk7 | Unpack JDK7
  action: command creates={{ jvm_folder }}/{{ jdk7_archive_extracted }} chdir={{ jvm_folder }} tar zxvf {{ jvm_folder }}/{{ jdk7_archive }} --owner=root
  register: jdk7_installed
#  ignore_errors: true
  sudo: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and jdk7_download.changed and jenkins_jdk7_enable
  tags: jdk_setup

- name: jdk7 | Install JDK7 RPM package
  action: command creates={{ jvm_folder }}/{{ jdk7_archive_extracted }} chdir={{ jvm_folder }} rpm --force -Uvh {{ jvm_folder }}/{{ jdk7_archive }}
  register: jdk7_installed
#  ignore_errors: true
  sudo: yes
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux') and jdk7_download.changed and jenkins_jdk7_enable
  tags: jdk_setup

- name: jdk7 | Change archive jdk ownership
  file: path={{jvm_folder}}/{{jdk7_archive_extracted}} owner={{jdk_owner}} group={{jdk_group}} state=directory recurse=yes
  when: jdk7_download.changed and jenkins_jdk7_enable
  tags: jdk_setup

- name: jdk7 | Stat {{jvm_folder}}/{{jdk7_archive_extracted}}
  stat: path={{jvm_folder}}/{{jdk7_archive_extracted}}
  register: jdk7_archive_extracted_present
  tags: jdk_setup

- debug: msg=" jdk7 | Path exists and is a directory"
  when: jdk7_archive_extracted_present.stat.isdir is defined and jdk7_archive_extracted_present.stat.isdir == true
  tags: jdk_setup

- fail: msg=" jdk7 | Whoops! file ownership has changed"
  when: jdk7_archive_extracted_present.stat.pw_name != '{{jdk_owner}}'
  tags: jdk_setup

#- debug: msg="jdk7_installed value is {{ jdk7_installed.stdout }} "

- debug: msg=" jdk7 | jdk7_installed value is {{ jdk7_installed }} {{ jdk7_installed.skipped }} {{ jdk7_installed.changed }}"
  when: jenkins_jdk7_enable
  tags: jdk_setup

- include: jdk7-tasks.yml
  when: jenkins_jdk7_enable
  tags: jdk_setup

- name: jdk8 | Copy download JDK8 script
  copy: src=download-jdk8.sh dest={{ jdk_dir_tmp }} mode=0555
  when: jenkins_jdk8_enable
  tags: jdk_setup

- name: jdk8 | Download JDK8 (Ubuntu)
  action: command creates={{ jvm_folder }}/{{ jdk8_archive_extracted }} chdir={{ jvm_folder }} {{ jdk_dir_tmp }}/download-jdk8.sh {{ jdk8_url }} {{ jdk8_archive }}
  sudo: yes
  register: jdk8_download
  when: jenkins_jdk8_enable
  tags: jdk_setup

- name: jdk8 | Unpack JDK8
  action: command creates={{ jvm_folder }}/{{ jdk8_archive_extracted }} chdir={{ jvm_folder }} tar zxvf {{jvm_folder}}/{{ jdk8_archive }} --owner=root
  register: jdk8_installed
#  ignore_errors: true
  sudo: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and jdk8_download.changed and jenkins_jdk8_enable
  tags: jdk_setup

- name: jdk8 | Install JDK8 RPM package
  action: command creates={{ jvm_folder }}/{{ jdk8_archive_extracted }} chdir={{ jvm_folder }} rpm --force -Uvh {{ jvm_folder }}/{{ jdk8_archive }}
  register: jdk8_installed
#  ignore_errors: true
  sudo: yes
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux') and jdk8_download.changed and jenkins_jdk8_enable
  tags: jdk_setup

- name: jdk8 | Change archive jdk ownership
  file: path={{jvm_folder}}/{{jdk8_archive_extracted}} owner={{jdk_owner}} group={{jdk_group}} state=directory recurse=yes
  when: jdk8_download.changed and jenkins_jdk8_enable
  tags: jdk_setup

- name: jdk8 | Stat {{jvm_folder}}/{{jdk8_archive_extracted}}
  stat: path={{jvm_folder}}/{{jdk8_archive_extracted}}
  register: jdk8_archive_extracted_present
  tags: jdk_setup

- debug: msg=" jdk8 | Path exists and is a directory"
  when: jdk8_archive_extracted_present.stat.isdir is defined and jdk8_archive_extracted_present.stat.isdir == true
  tags: jdk_setup

- fail: msg=" jdk8 | Whoops! file ownership has changed"
  when: jdk8_archive_extracted_present.stat.pw_name != '{{jdk_owner}}'
  tags: jdk_setup

#- debug: msg=" jenkins-slave | jdk8_installed value is {{ jdk8_installed.stdout }} "

- debug: msg=" jenkins-slave | jdk8_installed value is {{ jdk8_installed }} {{ jdk8_installed.skipped }} {{ jdk8_installed.changed }}"
  when: jenkins_jdk8_enable
  tags: jdk_setup

- include: jdk8-tasks.yml
  when: jenkins_jdk8_enable
  tags: jdk_setup

#######
# MAVEN
#
- name: jenkins-slave | Create /opt directory
  file: path=/opt state=directory

- name: jenkins-slave | Download Maven 3.3.3
  get_url: dest=/opt/maven333.tar.gz url=http://www.eu.apache.org/dist/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz

- name: jenkins-slave | Unpack Maven 3.3.3
  action: command creates=/opt/maven333 chdir=/opt tar zxvf /opt/maven333.tar.gz

- name: jenkins-slave | Create Maven 3.3.3 directory link
  file: path=/opt/maven333 src=/opt/apache-maven-3.3.3 state=link

- name: jenkins-slave | Create Maven 3.3.3 directory link (legacy required)
  file: path=/usr/local/apache-maven-3.3.3 src=/opt/apache-maven-3.3.3 state=link

- name: jenkins-slave | Download Maven 3.2.1
  get_url: dest=/opt/maven321.tar.gz url=http://archive.apache.org/dist/maven/binaries/apache-maven-3.2.1-bin.tar.gz

- name: jenkins-slave | Unpack Maven 3.2.1
  action: command creates=/opt/maven321 chdir=/opt tar zxvf /opt/maven321.tar.gz

- name: jenkins-slave | Create Maven 3.2.1 directory link
  file: path=/opt/maven321 src=/opt/apache-maven-3.2.1 state=link

- name: jenkins-slave | Create Maven 3.2.1 directory link (legacy required)
  file: path=/usr/local/apache-maven-3.2.1 src=/opt/apache-maven-3.2.1 state=link

#- name: jenkins-slave | Download Maven 3.0.5
#  get_url: dest=/opt/maven305.tar.gz url=http://archive.apache.org/dist/maven/binaries/apache-maven-3.0.5-bin.tar.gz

#- name: jenkins-slave | Unpack Maven 3.0.5
#  action: command creates=/opt/maven305 chdir=/opt tar zxvf /opt/maven305.tar.gz

#- name: jenkins-slave | Create Maven 3.0.5 directory link
#  file: path=/opt/maven305 src=/opt/apache-maven-3.0.5 state=link

#- name: jenkins-slave | Create Maven 3.0.5 directory link (legacy required)
#  file: path=/usr/local/apache-maven-3.0.5 src=/opt/apache-maven-3.0.5 state=link

#- name: jenkins-slave | Download Maven 3.0.4
#  get_url: dest=/opt/maven3.tar.gz url=http://archive.apache.org/dist/maven/binaries/apache-maven-3.0.4-bin.tar.gz

#- name: jenkins-slave | Unpack Maven 3.0.4
#  action: command creates=/opt/maven3 chdir=/opt tar zxvf /opt/maven3.tar.gz

#- name: jenkins-slave | Create Maven 3.0.4 directory link
#  file: path=/opt/maven3 src=/opt/apache-maven-3.0.4 state=link

#- name: jenkins-slave | Create Maven 3.0.4 directory link (legacy required)
#  file: path=/usr/local/apache-maven-3.0.4 src=/opt/apache-maven-3.0.4 state=link

#- name: jenkins-slave | Download Maven 2.2.1
#  get_url: dest=/opt/maven2.tar.gz url=http://archive.apache.org/dist/maven/binaries/apache-maven-2.2.1-bin.tar.gz

#- name: jenkins-slave | Unpack Maven 2.2.1
#  action: command creates=/opt/maven2 chdir=/opt tar zxvf /opt/maven2.tar.gz

#- name: jenkins-slave | Create Maven 2.2.1 directory link
#  file: path=/opt/maven2 src=/opt/apache-maven-2.2.1 state=link

#- name: jenkins-slave | Create Maven 2.2.1 directory link (legacy required)
#  file: path=/usr/local/apache-maven-2.2.1 src=/opt/apache-maven-2.2.1 state=link

#- name: jenkins-slave | Download Maven 2.0.9
#  get_url: dest=/opt/maven209.tar.gz url=http://archive.apache.org/dist/maven/binaries/apache-maven-2.0.9-bin.tar.gz

#- name: jenkins-slave | Unpack Maven 2.0.9
#  action: command creates=/opt/maven209 chdir=/opt tar zxvf /opt/maven209.tar.gz

#- name: jenkins-slave | Create Maven 2.0.9 directory link
#  file: path=/opt/maven209 src=/opt/apache-maven-2.0.9 state=link

#- name: jenkins-slave | Create Maven 2.0.9 directory link (legacy required)
#  file: path=/usr/local/apache-maven-2.0.9 src=/opt/apache-maven-2.0.9 state=link

- name: jenkins-slave | Remove Maven333 archive
  file: path=/opt/maven333.tar.gz state=absent

- name: jenkins-slave | Remove Maven321 archive
  file: path=/opt/maven321.tar.gz state=absent

- name: jenkins-slave | Remove Maven305 archive
  file: path=/opt/maven305.tar.gz state=absent

- name: jenkins-slave | Remove Maven3 archive
  file: path=/opt/maven3.tar.gz state=absent

- name: jenkins-slave | Remove Maven2 archive
  file: path=/opt/maven2.tar.gz state=absent

- name: jenkins-slave | Remove Maven209 archive
  file: path=/opt/maven209.tar.gz state=absent

##
 # git
 #
# Moved to his own role
#- name: jenkins-slave | Install git package
#  action: apt pkg='git' state={{ jenkins_pkg_state }}
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#
#- name: jenkins-slave | Install git package
#  action: yum name='git' state={{ jenkins_pkg_state }}
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Update git configuration (user.email)
  action: command git config --global user.email "{{ shell_git_email }}"

- name: Update git configuration (user.name)
  action: command git config --global user.name "{{ shell_git_name }}"
  sudo: yes

- name: Update git configuration (http.sslVerify)
  action: command git config --global http.sslVerify {{ shell_git_ssl }}
  sudo: yes

- name: jenkins-slave | Install coverage and metrics tools
  apt: pkg={{ item }} state={{ jenkins_pkg_state }} update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  with_items:
   - lcov
   - graphviz
   - doxygen
  sudo: yes

#TODO opencl install
#wget http://registrationcenter.intel.com/irc_nas/4181/intel_sdk_for_ocl_applications_2014_ubuntu_4.4.0.117_x64.tgz
#tar zxvf intel_sdk_for_ocl_applications_2014_ubuntu_4.4.0.117_x64.tgz
#./install-cpu.sh
#ll /usr/lib/x86_64-linux-gnu/libOpenCL.so

- name: jenkins-slave | Install tools needed by cpp generator
  apt: pkg={{ item }} state={{ jenkins_pkg_state }} update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  with_items:
   - libxml-dom-perl
   - libfile-find-rule-perl
   - libjson-perl
   - libdate-calc-perl
   - libdate-manip-perl
   - libcrypt-ssleay-perl
   - libxml-handler-yawriter-perl
   - libxml-simple-perl
  sudo: yes

- name: jenkins-slave | Install tools needed by grunt-zaproxy html report
  apt: pkg={{ item }} state={{ jenkins_pkg_state }} update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  with_items:
   - libxml2-dev #Needed for having /usr/bin/xml2-config in the PATH
   - libxslt-dev
  sudo: yes

- name: jenkins-slave | Install tools needed by grunt-zaproxy html report
  action: yum name='{{ item }}' state={{ jenkins_pkg_state }}
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  with_items:
   - libxml2 #Needed for having /usr/bin/xml2-config in the PATH
   - libxslt
   - libexslt
  sudo: yes

- name: jenkins-slave | Install Ansible syntax check
  pip: name={{ item }}
  sudo: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - ansible-lint

- name: workstation | Install security basic tools for Ansible check
  apt: pkg={{ item }} update_cache=yes state={{ jenkins_pkg_state }}
  sudo: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - chkrootkit

- name: jenkins-slave | Create jenkins user
  user: name={{ jenkins_user }} password={{ jenkins_password }} update_password=always comment="Jenkins user" home={{ jenkins_home }} shell={{ jenkins_shell }}
  sudo: yes
#  ignore_errors: true

#- name: jenkins-slave | Create .ssh folder
#  file: path={{ jenkins_home }}/.ssh state=directory mode=0700  owner={{ jenkins_user }} group={{ jenkins_group }}
#  ignore_errors: true

- include: ssh.yml
  when: jenkins_ssh_key_file != ""
  tags: [jenkins, jenkins-ssh]

#- name: jenkins-slave | Add passwordless connection for jenkins (Alban Andrieu)
#  authorized_key: user={{ jenkins_user }} key="ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAio3SOQ9yeK6QfKqSFNKyTasuzjStxWevG1Vz1wgJIxPF+KB0XoMAPD081J+Bzj2LCDRSWisNv2L4xv2jbFxW/Pl7NEakoX47eNx3U+Dxaf+szeWBTryYcDUGkduLV7G8Qncm0luIFd+HDIe/Qir1E2f56Qu2uuBNE6Tz5TFt1vc= Alban"

#TODO use authorized_key instead of copy-keys.yml
#http://brokenbad.com/better-handling-of-public-ssh-keys-using-ansible/
#- name: Checking public keys list
#  authorized_key:
#    user: "{{ base_admin_username }}"
#    key: "{{ item }}"
#  with_items: base_admin_keys

#- name: jenkins-slave | Update authorized_keys rights
#  file: path={{ jenkins_home }}/.ssh/authorized_keys state=file mode=0600 owner={{ jenkins_user }} group={{ jenkins_group }}
#  ignore_errors: true


- name: jenkins-slave | Copy the deploy-log-parsing-rules for jenkins log parsing configuration
  copy: src=deploy-log-parsing-rules dest={{ jenkins_home }}/deploy-log-parsing-rules backup=yes owner={{ jenkins_user }} group={{ jenkins_group }}

- name: jenkins-slave | Copy the .netrc script for git credentials
  template: src=.netrc.j2 dest={{ jenkins_home }}/.netrc mode=0600 owner={{ jenkins_user }} group={{ jenkins_group }}

- name: jenkins-slave | Update git .netrc rights
  file: path={{ jenkins_home }}/.netrc state=file mode=0600 owner={{ jenkins_user }} group={{ jenkins_group }}

- name: jenkins-slave | Create .m2 folder
  file: path={{ jenkins_home }}/.m2 state=directory owner={{ jenkins_user }} group={{ jenkins_group }} mode=0775

- name: jenkins-slave | Copy maven configuration
  template: src=settings.xml.j2 dest={{ jenkins_home }}/.m2/settings.xml backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0700

- name: jenkins-slave | Jenkins can run any command with no password
  lineinfile: "line='jenkins ALL=NOPASSWD: ALL' dest=/etc/sudoers regexp='^jenkins' validate='visudo -cf %s'"
  sudo: yes

- name: jenkins-slave | Copy sonar runner configuration
  copy: src=sonar-runner-nabla-cpp.properties dest={{ jenkins_slave_home }}/sonar-runner.properties backup=yes owner={{ jenkins_user }} group={{ jenkins_group }}

#- name: jenkins-slave | Ensure npm settings
#  command: chdir=/usr/bin npm config set registry {{ nexus_npm_url }}

- name: jenkins-slave | Copy the .npmrc script
  template: src=.npmrc.j2 dest={{ jenkins_home }}/.npmrc mode=0600 owner={{ jenkins_user }} group={{ jenkins_group }}

- name: jenkins-slave | Copy the .bowerrc script
  template: src=.bowerrc.j2 dest={{ jenkins_home }}/.bowerrc mode=0600 owner={{ jenkins_user }} group={{ jenkins_group }}

- name: workstation | Install requirement for phantomas
  apt: pkg={{ item }} update_cache=yes state={{ jenkins_pkg_state }}
  sudo: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - libfontconfig1

#TODO use jenkins to install phantomjs
#- name: npm | Ensure the phantomas npm dependencies are installed
#  npm: >
#    name={{ item }}
#    state=present
#    global=yes
#  with_items:
#    - phantomjs
#    - phantomas
#  sudo: yes
#  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and nodejs_enabled

#- name: jenkins-slave | Create {{ jenkins_slave_home }} directory
#  file: path={{ jenkins_slave_home }} state=directory

#- name: jenkins-slave | Create /repository directory
#  file: path={{ jenkins_slave_home }}/repository state=directory owner=jenkins

#- name: jenkins-slave | Create Jenkins slave directory
  #file: path={{ jenkins_slave_directory }} state=directory owner={{ jenkins_user }} group={{ jenkins_group }} mode=0775

#- name: jenkins-slave | Create Java directory link (legacy required)
#  file: path={{ jenkins_slave_home }}/jdk1.7 src={{ jvm_folder }}/{{ jdk7_archive_extracted }} state=link
#  when: jenkins_jdk7_enable
#  sudo: yes

#END OF TODO extract jenkins user to another script

#sudo update-alternatives --list java
#sudo update-alternatives --remove java /usr/lib/jvm/{{ jdk7_archive_extracted }}/bin/java
#sudo update-alternatives --remove java /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java
#sudo update-alternatives --remove java /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java

#TODO
#sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.6.0_32/bin/javac 1
#sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.6.0_32/bin/java 1
#sudo update-alternatives --install /usr/bin/javaws javaws /usr/lib/jvm/jdk1.6.0_32/bin/javaws 1
#sudo update-alternatives --install java_vm
#- name: Set java link
#  action: command update-alternatives --install /usr/bin/java java {{ jvm_folder }}/{{ jdk8_archive_extracted }}/bin/java 1
#  when: "jdk8_installed.changed == 'True'"

#TODO
#sudo update-alternatives --config javac
#sudo update-alternatives --config java
#sudo update-alternatives --config javaws
#sudo update-alternatives --config javadoc
#sudo update-alternatives --config javafxpackager
#sudo update-alternatives --config javah
#sudo update-alternatives --config javap

#TODO Verify the symlinks all point to the new java location:
#ls -la /etc/alternatives/java*

#------------------------------

#Setting Java environment variables
#sudo apt-get install oracle-java8-set-default

#Switching between Oracle Java 8 and Java 7
#sudo update-java-alternatives -s java-7-oracle
#sudo update-java-alternatives -s java-8-oracle

- name: jenkins-slave | Set java link
  action: command update-alternatives --install /usr/bin/java java {{ jvm_folder }}/{{ jdk8_archive_extracted }}/bin/java 1
  when: "jdk8_installed.changed == 'True'"
  sudo: yes

- name: jenkins-slave | Set jar link
  action: command update-alternatives --install /usr/bin/jar jar {{ jvm_folder }}/{{ jdk8_archive_extracted }}/bin/jar 1
  when: "jdk8_installed.changed == 'True'"
  sudo: yes

#sudo update-alternatives --list mvn
#sudo update-alternatives --remove mvn /usr/share/maven/bin/mvn
#sudo update-alternatives --remove mvn /opt/maven333/bin/mvn
#sudo update-alternatives --remove mvn /opt/maven321/bin/mvn
#sudo update-alternatives --remove mvn /opt/maven3/bin/mvn
#sudo update-alternatives --config mvn

#sudo update-alternatives --config mvn
- name: jenkins-slave | Set mvn link to Maven 3.3.3
  action: command update-alternatives --install /usr/bin/mvn mvn /opt/maven333/bin/mvn 1
  sudo: yes

#- name: jenkins-slave | Set mvn local link to Maven 3.0.5
#  action: command update-alternatives --install /usr/local/bin/mvn mvn /opt/maven333/bin/mvn 1

#http://drupalcode.org/sandbox/franskuipers/1801378.git/blob/e0d2e3dd3f3b9ff7f9ace61f9e56c56a1f28e915:/ansible.yml  #

#- name: jenkins-slave | Clone the application
#  action: git repo=http://toto/stash/scm/risk/buildmasters.git dest=/jenkins/buildmasters

- name: jenkins-slave | Cleanup temporary directory
  file: name={{ tempdir.stdout }} state=absent
  tags:
    - jenkins-slave

- name: jenkins-slave | Copy Dockerfile
  template: src=Dockerfile.j2 dest={{ docker_files_generated_directory }}/Dockerfile mode=0777
  when: docker_files_enable

- name: jenkins-slave | Copy build.sh
  template: src=build.sh.j2 dest={{ docker_files_generated_directory }}/build.sh mode=0777
  when: docker_files_enable
