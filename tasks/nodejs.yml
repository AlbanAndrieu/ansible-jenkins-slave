
- name: jenkins-slave | Install requirement for phantomas/phantomjs (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - libfontconfig1
    - libfreetype6
  become: yes
  
- name: jenkins-slave | Install requirement for phantomas/phantomjs (RedHat based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  with_items:
    - fontconfig
    - freetype
    - libfreetype.so.6
    - libfontconfig.so.1
  become: yes
  
#Warning on Ubuntu command is nodejs (instead of node)
- name: jenkins-slave | Install nodejs npm official (might be outdated) (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version in ['12.04','14.04']) and nodejs_enabled
  with_items:
    - nodejs
  become: yes    
  ignore_errors: yes
  
- name: jenkins-slave | Install nodejs npm official (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['12.04']) and nodejs_enabled
  with_items:
    - npm
  become: yes
  ignore_errors: yes
    
- name: npm | Ensure the n (node updater) is installed
  npm: >
    name={{ item }}
    state=present
    global=yes
  with_items:
    - n
  become: yes
  ignore_errors: yes  
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ("12.04") and nodejs_enabled

#Node updater
#sudo npm cache clean -f
#sudo npm install -g n
#sudo npm view npm dist-tags
#sudo n stable
- name: jenkins-slave | Update node
  action: command n v{{ nodejs_version }}
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ("12.04") and nodejs_enabled
  become: yes
  ignore_errors: yes  
  changed_when: false

#/usr/local/n/versions/node/6.4.0
#/usr/bin/node --version
#Switch to new version
#sudo ln -sf /usr/local/n/versions/node/6.4.0/ /usr/bin/node

- name: jenkins-slave | Create node link
  file: path=/usr/bin/node src=/usr/local/n/versions/node/{{ nodejs_version }}/ state=link
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ("12.04") and nodejs_enabled
  ignore_errors: yes  
  become: yes

#npm -g list grunt
#npm install -g npm
#npm -version
#3.10.6
#npm update -g
#npm config set python python2.7

#npm install --unsafe-perm -g node-sass

#TODO use jenkins to install phantomjs
- name: npm | Ensure the npm dependencies are installed
  npm: >
    name={{ item }}
    state=present
    global=yes
  with_items:
    - phantomjs-prebuilt@2.1.12
    - phantomas@1.16.0
    - nsp@2.6.1
    - grunt@1.0.1
    - grunt-cli@1.2.0
    - bower@1.8.0
    - node-sass@3.11.2
    - node-gyp@3.4.0
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ("12.04") and nodejs_enabled
  ignore_errors: yes  
  become: yes
  
- name: jenkins-slave | Install compass (Debian based)
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['12.04','13.04','14.04']) and nodejs_enabled
  with_items:
    - ruby-compass
  become: yes    
  ignore_errors: yes
  
#- name: jenkins-slave | Ensure npm settings
#  command: chdir=/usr/bin npm config set registry {{ nexus_npm_url }}
