
#wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi > bootstrap.cgi
#bash bootstrap.cgi
#yum install srvadmin-base
#yum install srvadmin-storageservices

- name: zabbix | Remove srvadmin-storelib-sysfs conflict megacli
  action: "{{ ansible_pkg_mgr }} name={{ item }} state=absent update_cache=yes"
  tags: package
  with_items:
   - srvadmin-storelib-sysfs
  changed_when: false
  become: yes
  ignore_errors: true

- name: zabbix | Install sensors package
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  tags: package
  with_items:
   - lm_sensors
   - xsensors
  changed_when: false
  become: yes
  ignore_errors: true

- name: zabbix | Create /opt/zabbix/externalscripts folder
  file: path=/opt/zabbix/externalscripts state=directory owner={{ jenkins_user }} group={{ jenkins_group }} mode=0775
  become: true
  changed_when: false

- name: zabbix | Copy zabbix script (1)
  copy: src=zabbix/array-all-status-dell.sh dest=/opt/zabbix/externalscripts/array-all-status-dell.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

- name: zabbix | Copy zabbix script (2)
  copy: src=zabbix/array-all-status-hp.sh dest=/opt/zabbix/externalscripts/array-all-status-hp.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

#- name: zabbix | Install open-iscsi package
#  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
#  tags: package
#  with_items:
#   - open-iscsi
#  changed_when: false
#  become: yes
#  ignore_errors: true

- name: zabbix | Copy zabbix script (3)
  copy: src=zabbix/iscsi-status.sh dest=/opt/zabbix/externalscripts/iscsi-status.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

- name: zabbix | Copy zabbix script (4)
  copy: src=zabbix/fs-discovery.sh dest=/opt/zabbix/externalscripts/fs-discovery.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

- name: zabbix | Copy zabbix script (5)
  copy: src=zabbix/zpool-status.sh dest=/opt/zabbix/externalscripts/zpool-status.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

- name: zabbix | Copy zabbix script (6)
  copy: src=zabbix/zpool-discovery.sh dest=/opt/zabbix/externalscripts/zpool-discovery.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

- name: zabbix | Copy zabbix script (7)
  copy: src=zabbix/zfs-vfs-size.sh dest=/opt/zabbix/externalscripts/zfs-vfs-size.sh backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  ignore_errors: true

- name: zabbix | Create /etc/zabbix/ folder
  file: path={{ zabbix_agent_config_director }} state=directory owner={{ jenkins_user }} group={{ jenkins_group }} mode=0775
  become: true
  changed_when: false

- name: zabbix | Copy zabbix configuration
  template: src=zabbix_agentd.conf.j2 dest={{ zabbix_agent_config_director }}/zabbix_agentd.conf backup=yes owner={{ jenkins_user }} group={{ jenkins_group }} mode=0755
  become: true
  changed_when: false

- name: zabbix | Disable chronyd (to allow ntps service to run for zabbix)
  command: systemctl disable chronyd
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or (ansible_distribution == 'RedHat' and not ansible_distribution_major_version == '6') )
  changed_when: false
  become: yes
  ignore_errors: true

- name: zabbix | Install locate package
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  tags: package
  with_items:
   - mlocate
#  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  changed_when: false
  become: yes
  ignore_errors: true

- name: zabbix | updatedb
  command: updatedb
#  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  changed_when: false
  become: yes
  ignore_errors: true

#TODO
##See https://libstorage.github.io/libstoragemgmt-doc/doc/install.html
#sudo yum install libstoragemgmt
#sudo yum install libstoragemgmt-\*-plugin
#sudo systemctl start libstoragemgmt.service
#lsmcli -u 'sim://' list --type systems

#FYI perccli64 is installed on administrations role dell.yml
- name: zabbix | Check perccli64 properly installed
  command: /opt/MegaRAID/perccli/perccli64 --version
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat') and (ansible_system_vendor == 'Dell Inc.' or ansible_system_vendor == 'VMware, Inc.')
  changed_when: false
  become: yes
  ignore_errors: true
