---

- name: python3 | Set python link to python
  set_fact: python_dir=/usr/bin
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

# TODO on RedHat add python3.6 by hand

- name: python3 | Set python link to python
  set_fact: python_dir=/usr/local/bin
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')

- name: python2 | Set python 2 link to python version
  set_fact: python2_version=2.6
  when: (ansible_distribution == 'RedHat' and ansible_distribution_major_version == '6')

- name: python2 | Set python 2 link to python version
  set_fact: python2_version=2.7
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or (ansible_distribution == 'RedHat' and not ansible_distribution_major_version == '6') )

- name: python3 | Set python 3 link to python version
  set_fact: python3_version=3.5

# ls -la /etc/alternatives/python*
# sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 30
# sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.5 20
# sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 100
# sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.6  5
# sudo update-alternatives --config python

- name: python3 | Display python link before
  action: command update-alternatives --display python
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['12.04', '14.04']
  changed_when: false
  become: true
  ignore_errors: true

- name: python3 | Configure python alternatives
  alternatives: name={{ item.name }} link={{ item.link }} path={{ item.path }} priority={{ item.priority }}
  with_items:
  - { name: python, link: /usr/bin/python, path: "/usr/bin/{{ python2_version }}", priority: 100 }
  - { name: python, link: /usr/bin/python, path: "{{ python_dir }}/python3.5", priority: 10 }
  - { name: python, link: /usr/bin/python, path: "{{ python_dir }}/python3.6", priority: 20 }
  when: not( (python_dir is undefined) or (python_dir is none) or (python_dir | trim == '') )
        and
        not( (python3_version is undefined) or (python3_version is none) or (python3_version | trim == '') )
        and ((ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['12.04', '14.04'])
  become: true
  ignore_errors: true

- name: python3 | Display python link after
  action: command update-alternatives --display python
  when: not( (python_dir is undefined) or (python_dir is none) or (python_dir | trim == '') )
        and
        not( (python3_version is undefined) or (python3_version is none) or (python3_version | trim == '') )
        and ((ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version not in ['12.04', '14.04'])
  changed_when: false
  become: true

# #alternatives --install /usr/bin/python python /usr/local/bin/python3.6 2
# alternatives --install /usr/bin/python python /usr/bin/python3.6 2
# alternatives --install /usr/bin/python python /usr/bin/python2.7 1

# alternatives --list | grep -i python

# alternatives --install /usr/bin/python python /usr/local/bin/python3.6 2
# alternatives --install /usr/bin/python python /usr/bin/python2.7 1

# pip3 install docker-py
# pip3 install -U docker-compose
# pip3 install ansible

# python3 /usr/bin/ansible localhost -m ping
