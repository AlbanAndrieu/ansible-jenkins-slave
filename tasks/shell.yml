
- name: jenkins-slave | Install shell for running
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  tags: package
  with_items:
   - bash
   - ksh
  become: yes
  
- name: jenkins-slave | Install shell for running
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  tags: package
  with_items:
   - bash
   - ksh
  become: yes
    
- name: jenkins-slave | Install shell tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  tags: package
  with_items:
   - shellcheck
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') or (ansible_distribution == 'MacOSX' or ansible_distribution == 'FreeBSD')   
  become: yes  
  ignore_errors: true
  
- name: jenkins-slave | Install shell tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=yes"
  tags: package
  with_items:
   - ShellCheck
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')   
  become: yes    
  ignore_errors: true
    
#For Solaris 10 update PATH
#env
#crle
#echo $PATH
##/usr/bin
#PATH=/usr/sbin:/usr/bin:/usr/ccs/bin:/usr/sfw/bin
#echo $SHELL
##PS1='\w $ '
#PS1='${HOST}:${PWD} # ';  export PS1
#Switch to bash
#exec bash --noprofile --rcfile /dev/null
#export GIT_DISCOVERY_ACROSS_FILESYSTEM=1

#TODO add JAVA_HOME

- name: jenkins-slave | Add options in ~/.bashrc
  lineinfile:
    dest: ~/.bashrc
    line: "{{ item.line }}"
    insertafter: EOF
  with_items:
    - { regexp: '', line: 'export SCONS=/usr/bin/python2.7 /usr/bin/scons' }
    - { regexp: '', line: 'export TAR=/bin/gtar' }
    - { regexp: '', line: 'export GIT_DISCOVERY_ACROSS_FILESYSTEM=1' } #For Solaris
    - { regexp: '', line: 'export ACCEPT_EULA=Y' } #For MsSQL
    - { regexp: '', line: 'export SA_PASSWORD={{ shell_sa_password }}' } #For MsSQL
  become_user: "{{ jenkins_user }}"
  changed_when: false
  ignore_errors: true
  
- name: jenkins-slave | Switch to bash
  command: usermod -s {{ jenkins_shell }} {{ jenkins_user }}
  #become_user: "{{ jenkins_user }}"
  changed_when: false
  ignore_errors: "{{ ansible_check_mode }}"

#Add more fonts
#https://coolaj86.com/articles/how-to-get-more-fonts-on-ubuntu.html

- name: jenkins-slave | Install ttf
  action: "{{ ansible_pkg_mgr}} name={{ item }} update_cache=yes state={{ util_pkg_state|default('present') }}"
  with_items:
   - ttf-xfree86-nonfree
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['12.04','13.04','14.04'])
  become: yes

