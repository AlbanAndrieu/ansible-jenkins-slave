---
# - name: jenkins-slave | Kill connection used by user jenkins
#   action: shell killall -u {{ jenkins_user }} || true
#   changed_when: false
#   become: true
#   ignore_errors: true

# TODO https://stackoverflow.com/questions/26677064/create-and-use-group-without-restart
- name: jenkins-slave | Create a docker group
  group: name={{ docker_group }} state=present gid="{{ docker_gid }}"
  become: true

- name: jenkins-slave | Create a jenkins group
  group: name={{ jenkins_group }} state=present gid={{ jenkins_gid }}
  become: true
  ignore_errors: true # when user already exist and used by process it is failing

- name: jenkins-slave | Create all groups tentatively needed by jenkins user
  group:
    name: "{{ item }}"
    state: present
  become: true
  with_items: "{{ jenkins_groups }}"

- name: jenkins-slave | Create a www-data group
  group: name={{ data_group }} state=present gid={{ data_gid }}
  become: true
  ignore_errors: true

- name: jenkins-slave | Create jenkins user and group
  user:
    name: "{{ jenkins_user }}"
    password: "{{ jenkins_password }}"
    update_password: always
    comment: Jenkins
    home: "{{ jenkins_home }}"
    shell: "{{ jenkins_shell }}"
    uid: "{{ jenkins_id }}"
    group: "{{ jenkins_primary_group }}"
    groups: "{{ jenkins_groups }}"
    # Important to not remove user from existing groups, such as docker
    append: true
  changed_when: false
  become: true
  ignore_errors: true # when user already exist and used by process it is failing

- name: jenkins-slave | Add user(s) to docker group
  user: name={{ item }} group={{ docker_group }} state=present
  with_items: "{{ docker_users }}"
  when: docker_users is defined
  changed_when: false
  become: true
  ignore_errors: true # for molecule (Group docker does not exist)

- name: jenkins-slave | Ubuntu - Create all groups tentatively needed by jenkins user
  group:
    name: sudo
    state: present
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags:
    - sudo

- name: jenkins-slave | Red Hat, CentOS - Create all groups tentatively needed by jenkins user
  group:
    name: wheel
    state: present
  become: true
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat')
  tags:
    - sudo

- name: jenkins-slave | Create .ssh folder
  file: path={{ jenkins_home }}/.ssh state=directory mode=0700 owner={{ jenkins_user }} group={{ jenkins_group }}
  ignore_errors: true

- import_tasks: ssh.yml
  when: jenkins_ssh_key_file != ""
  tags: [jenkins, jenkins-ssh]
- name: jenkins-slave | Update authorized_keys rights
  file: path={{ jenkins_home }}/.ssh/authorized_keys state=file mode=0600 owner={{ jenkins_user }} group={{ jenkins_group }}
  ignore_errors: true

- name: jenkins-slave | Jenkins can run any command with no password
  lineinfile: dest=/etc/sudoers line="{{ item }}" validate='visudo -cf %s'
  with_items:
    - Defaults:jenkins    !requiretty
    - "jenkins ALL=NOPASSWD: ALL"
    - Defaults:jenkins    secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  when: jenkins_sudo
  become: true
  ignore_errors: true
  changed_when: false

- name: jenkins-slave | Disable env_reset
  lineinfile: dest=/etc/sudoers regexp="^Defaults    env_reset.*" line="Defaults    !env_reset" backrefs=yes validate='visudo -cf %s'
  when: jenkins_sudo
  become: true
  ignore_errors: true
  changed_when: false

- name: jenkins-slave | Setup editor
  alternatives:
    name: editor
    path: /usr/bin/vim.basic
  # vim.basic will not be available on docker images
  ignore_errors: true
  become: true

# When nis user are mounted and we ovveride jenkins_home to /jenkins, home still belong to root
- name: jenkins-slave | Assert that home directory has proper right
  file:
    dest: "{{ jenkins_home }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775
