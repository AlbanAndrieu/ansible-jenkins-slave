<STYLE>
BODY, TABLE, TD, TH, P {
  font-family:Verdana,Helvetica,sans serif;
  font-size:11px;
  color:black;
}
h1 { color:black; }
h2 { color:black; }
h3 { color:black; }
TD.bg1 { color:white; background-color:#0000C0; font-size:120% }
TD.bg2 { color:white; background-color:#4040FF; font-size:110% }
TD.bg3 { color:white; background-color:#8080FF; }
TD.test_passed { color:blue; }
TD.test_failed { color:red; }
TD.console { font-family:Courier New; }
</STYLE>

<%
def getResultAsString(build)
{
    def result = build?.result
    if (result == null) {
        result = "SUCCESS"
    }
    return result;
}
def currResult = getResultAsString(build)
%>

<!-- HEADER -->
<BODY>
<div class="round_border">
<TABLE>
  <TR><TD align="right">
    <IMG SRC="${rooturl}static/e59dfe28/images/32x32/<%= build.result.toString() == 'SUCCESS' ? "blue.gif" : build.result.toString() == 'FAILURE' ? 'red.gif' : 'yellow.gif' %>" />
      </TD><TD valign="center">
        <B style="font-size: 200%;">BUILD ${currResult}</B>
      </TD></TR>
      <TR><TD>
        Project:</TD><TD>${project.name}
      </TD></TR>
      <TR><TD>
        Cause:</TD><TD><% build.causes.each() { cause -> %> ${cause.shortDescription} <%  } %>
      </TD></TR>
      <TR><TD>
        Duration:</TD><TD>${build.durationString}
      </TD></TR>
  <TR><TD>URL</TD><TD><A href="${rooturl}${build.url}">${rooturl}${build.url}</A></TD></TR>
  <TR><TD>Date:</TD><TD>${build.time}</TD></TR>
</TABLE>
<BR/>
</div>
<BR/>

<!-- CHANGE SET -->
<TABLE width="100%">
<TR><TD class="bg1" colspan="2"> <B>CHANGES</B></TD></TR>
<%
def changeLogSets = build.changeSets
if (changeLogSets.size() == 0) {
%>
    <TR><TD colspan="2">No Changes</TD></TR>
<%
} else {
    changeLogSets.each() { changeLogSett ->
        def entries = changeLogSett.items
        entries.each() { entry ->
%>
            <TR><TD colspan="2" class="bg2">
              &nbsp;&nbsp;Revision <%= entry.commitId[0..7] %> by <B><%= entry.author %></B>,
              &nbsp;&nbsp; <%= entry.msgAnnotated %> (<%= entry.date %>)
            </TD></TR>
<%
            entry.affectedFiles.each() { affectedFile ->
%>
                <TR>
                    <TD width="10%">&nbsp;&nbsp;${affectedFile.editType.name}</TD>
                    <TD>${affectedFile.path}</TD>
                </TR>
<%
            }
        }
    }
}
%>
</TABLE>
<BR/>

<!-- ARTIFACTS -->
<TABLE width="100%">
<TR><TD class="bg1"><B>BUILD ARTIFACTS</B></TD></TR>
<%
def artifacts = build.artifacts
def artifactsOriginalSize = artifacts.size()
def artifactLimitTo = 10
if (artifactsOriginalSize > artifactLimitTo ) {
    artifacts = artifacts.subList(0, artifactLimitTo)
}
if (artifactsOriginalSize == 0) {
%>
    <TR><TD colspan="2">No Artifacts</TD></TR>
<%
} else {
%>
    <TR><TD colspan="2">
<%
    artifacts.each() { artifact ->
%>
        <li>
          <a href="${rooturl}${build.url}artifact/${artifact}">${artifact}</a>
        </li>
<%
    }
    if (artifactsOriginalSize > artifactLimitTo) {
%>
        ... and ${artifactsOriginalSize - artifactLimitTo} more
<%
    }
%>
    </TD></TR>
<%
}
%>
</TABLE>
<BR/>


<!-- JUNIT TEMPLATE -->
<%
try {
    def junitResultList = it.JUnitTestResult
    if (junitResultList.size() > 0) {
%>
        <TABLE width="100%">
        <TR><TD class="bg1" colspan="2"><B>${junitResultList.first().displayName}</B></TD></TR>
<%
        junitResultList.each { junitResult ->
            junitResult.getChildren().each { packageResult ->
%>
                <TR><TD class="bg2" colspan="2"> Name: ${packageResult.getName()} Failed: ${packageResult.getFailCount()} test(s), Passed: ${packageResult.getPassCount()} test(s), Skipped: ${packageResult.getSkipCount()} test(s), Total: ${packageResult.getPassCount()+packageResult.getFailCount()+packageResult.getSkipCount()} test(s)</TD></TR>
<%
                packageResult.getFailedTests().each { failed_test ->
%>
                    <TR bgcolor="white"><TD class="test_failed" colspan="2"><B><li>Failed: ${failed_test.getFullName()} </li></B></TD></TR>
<%
                }
            }
        }
%>
    </TABLE>
    <BR/>
<%
    }
}
catch (e) {}
%>


<!-- CONSOLE OUTPUT -->
<%
def logLinesAttached = 0
if (build.result == hudson.model.Result.SUCCESS) { logLinesAttached = 50  }
if (build.result == hudson.model.Result.FAILURE) { logLinesAttached = 200 }
%>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR><TD class="bg1"><B>CONSOLE OUTPUT</B></TD></TR>
<%
build.getLog(logLinesAttached).each() { logLine ->
%>
	<TR><TD class="console">${org.apache.commons.lang.StringEscapeUtils.escapeHtml(logLine)}</TD></TR>
<%
}
%>
</TABLE>
<BR/>

</BODY>
